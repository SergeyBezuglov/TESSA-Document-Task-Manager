// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIMS.Infrastructure.Persistence.DbContexts;

#nullable disable

namespace PIMS.Migrations.MSQL.Migrations
{
    [DbContext(typeof(PIMSDbContext))]
    [Migration("20240528061113_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.7.23375.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PIMS.Domain.Document", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActiveTaskID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ActiveTaskID")
                        .IsUnique()
                        .HasFilter("[ActiveTaskID] IS NOT NULL");

                    b.ToTable("Documents", (string)null);
                });

            modelBuilder.Entity("PIMS.Domain.ProjectTask", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PreviousTaskID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("DocumentID");

                    b.HasIndex("PreviousTaskID")
                        .IsUnique()
                        .HasFilter("[PreviousTaskID] IS NOT NULL");

                    b.ToTable("ProjectTasks", (string)null);
                });

            modelBuilder.Entity("PIMS.Domain.Document", b =>
                {
                    b.HasOne("PIMS.Domain.ProjectTask", "ActiveTask")
                        .WithOne()
                        .HasForeignKey("PIMS.Domain.Document", "ActiveTaskID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ActiveTask");
                });

            modelBuilder.Entity("PIMS.Domain.ProjectTask", b =>
                {
                    b.HasOne("PIMS.Domain.Document", "Document")
                        .WithMany("Tasks")
                        .HasForeignKey("DocumentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIMS.Domain.ProjectTask", "PreviousTask")
                        .WithOne()
                        .HasForeignKey("PIMS.Domain.ProjectTask", "PreviousTaskID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Document");

                    b.Navigation("PreviousTask");
                });

            modelBuilder.Entity("PIMS.Domain.Document", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
